# docker build -t varfor/apprtc:v1.0 -f .\APPRTC_D .
#   -e Candidate=124.223.98.45 \
#   -e ICE_IP=124.223.98.45 \
#   -e ICE_PORT=3478 \
#   -it varfor/apprtc
FROM ubuntu:16.04
LABEL version="1.0" description="AppRTC Server" author="leo" 

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /webrtc

ENV GAE_VER 1.9.74
ENV GOLANG_VER 1.8.3
ENV LIBEVENT_VER 2.1.12
ENV COTURN_VER 4.5.0.7

ENV Candidate 127.0.0.1

ENV ICE_IP 127.0.0.1
ENV ICE_PORT 127.0.0.1



RUN apt update -y

# Deps
RUN apt install -y build-essential vim git curl wget unzip python2.7 python-webtest-doc python-pip libssl-dev openjdk-8-jdk

RUN python -m pip install --user --upgrade pip==20.2.4
RUN pip install supervisor requests
RUN pip install git+https://github.com/bendikro/supervisord-dependent-startup

# NodeJS
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
RUN apt install -y nodejs
RUN mkdir /webrtc_avconf/

# Golang
ENV GOLANG_TAR go$GOLANG_VER.linux-amd64.tar.gz
RUN wget https://storage.googleapis.com/golang/$GOLANG_TAR
RUN tar -C /usr/local -xzf $GOLANG_TAR
ENV PATH $PATH:/usr/local/go/bin
ENV GOPATH /webrtc/goWorkspace
RUN mkdir -p $GOPATH/src
RUN mkdir -p $GOPATH/src/golang.org/x
RUN git clone https://gitee.com/liweixiang1234/net.git $GOPATH/src/golang.org/x/net
RUN git clone https://gitee.com/spypxf/tools.git $GOPATH/src/golang.org/tools



# Google App Engine
ENV GAE_ZIP google_appengine_$GAE_VER.zip
RUN wget https://storage.googleapis.com/appengine-sdks/featured/$GAE_ZIP
RUN unzip $GAE_ZIP -d /usr/local
ENV PATH $PATH:/usr/local/google_appengine

# Coturn server
# RUN wget https://github.com/libevent/libevent/releases/download/release-$LIBEVENT_VER-stable/libevent-$LIBEVENT_VER-stable.tar.gz
# RUN tar xvfz libevent-$LIBEVENT_VER-stable.tar.gz
# WORKDIR libevent-$LIBEVENT_VER-stable
# RUN ./configure && make && make install
# WORKDIR /
# RUN wget http://turnserver.open-sys.org/downloads/v$COTURN_VER/turnserver-$COTURN_VER.tar.gz
# RUN tar xvfz turnserver-$COTURN_VER.tar.gz
# WORKDIR turnserver-$COTURN_VER
# RUN ./configure && make && make install
# RUN turnadmin -a -u ninefingers -r apprtc -p youhavetoberealistic
# COPY turnserver.conf /etc/turnserver.conf

# AppRTC
WORKDIR /webrtc/
RUN git clone https://gitee.com/mcmeet_dev/apprtc.git

WORKDIR /webrtc/apprtc/

RUN ln -s /webrtc/apprtc/src/collider/collider $GOPATH/src
RUN ln -s /webrtc/apprtc/src/collider/collidermain $GOPATH/src
RUN ln -s /webrtc/apprtc/src/collider/collidertest $GOPATH/src
# RUN export GOPROXY=https://proxy.golang.com.cn,direct
RUN go get collidermain
RUN go install collidermain

RUN npm install -g npm
RUN npm install -g grunt-cli

RUN npm install

RUN grunt build

EXPOSE 8080 8089 3478 3033 9001 59000-65000

WORKDIR /webrtc/apprtc/

RUN npm install express
COPY ice.js /webrtc/
COPY constants.py /webrtc/apprtc/out/app_engine/constants.py

# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

COPY apprtc_supervisord.conf /

COPY run.sh /webrtc/
RUN chmod +x /webrtc/run.sh

CMD /webrtc/run.sh
